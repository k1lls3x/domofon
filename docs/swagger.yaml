basePath: /
definitions:
  domofon_internal_db.UpdateUserParams:
    properties:
      email:
        type: string
      firstName:
        $ref: '#/definitions/pgtype.Text'
      id:
        format: int32
        type: integer
      lastName:
        $ref: '#/definitions/pgtype.Text'
      passwordHash:
        type: string
      phone:
        type: string
      role:
        $ref: '#/definitions/pgtype.Text'
      username:
        type: string
    type: object
  domofon_internal_db.User:
    properties:
      avatarUrl:
        $ref: '#/definitions/pgtype.Text'
      createdAt:
        $ref: '#/definitions/pgtype.Timestamp'
      email:
        type: string
      firstName:
        $ref: '#/definitions/pgtype.Text'
      id:
        format: int32
        type: integer
      isActive:
        $ref: '#/definitions/pgtype.Bool'
      lastName:
        $ref: '#/definitions/pgtype.Text'
      passwordHash:
        type: string
      phone:
        type: string
      role:
        $ref: '#/definitions/pgtype.Text'
      username:
        type: string
    type: object
  internal_auth.ChangePasswordRequest:
    properties:
      new_password:
        type: string
      old_password:
        type: string
      phone:
        type: string
    type: object
  internal_auth.ForgotPasswordRequest:
    properties:
      phone:
        type: string
    type: object
  internal_auth.LoginRequest:
    properties:
      password:
        type: string
      phone:
        type: string
    type: object
  internal_auth.LoginResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
      user:
        $ref: '#/definitions/internal_auth.UserResponse'
    type: object
  internal_auth.RefreshRequest:
    properties:
      refresh_token:
        type: string
    type: object
  internal_auth.RefreshResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  internal_auth.RegisterRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
  internal_auth.RequestPhoneVerificationRequest:
    properties:
      phone:
        type: string
    type: object
  internal_auth.ResetPasswordRequest:
    properties:
      newPassword:
        type: string
      phone:
        type: string
    type: object
  internal_auth.UserResponse:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      phone:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
  internal_auth.VerifyPhoneRequest:
    properties:
      code:
        type: string
      phone:
        type: string
    type: object
  internal_user.CreateUserRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password_hash:
        type: string
      phone:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
  pgtype.Bool:
    properties:
      bool:
        type: boolean
      valid:
        type: boolean
    type: object
  pgtype.InfinityModifier:
    enum:
    - 1
    - 0
    - -1
    format: int32
    type: integer
    x-enum-varnames:
    - Infinity
    - Finite
    - NegativeInfinity
  pgtype.Text:
    properties:
      string:
        type: string
      valid:
        type: boolean
    type: object
  pgtype.Timestamp:
    properties:
      infinityModifier:
        $ref: '#/definitions/pgtype.InfinityModifier'
      time:
        description: Time zone will be ignored when encoding to PostgreSQL.
        type: string
      valid:
        type: boolean
    type: object
host: localhost:8080
info:
  contact: {}
  description: API для системы Домофон
  title: Domofon API
  version: "1.0"
paths:
  /auth/change-password:
    post:
      consumes:
      - application/json
      description: Смена пароля с проверкой старого пароля
      parameters:
      - description: Данные для смены пароля
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_auth.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Пароль успешно изменён
        "400":
          description: Ошибка смены пароля
          schema:
            type: string
      summary: Смена пароля по телефону
      tags:
      - auth
  /auth/forgot-password:
    post:
      consumes:
      - application/json
      description: Отправляет SMS-код для сброса пароля по телефону
      parameters:
      - description: Номер телефона
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_auth.ForgotPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Код сброса отправлен
        "400":
          description: Номер не найден
          schema:
            type: string
      summary: Запросить сброс пароля
      tags:
      - auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Авторизация пользователя по телефону и паролю. Возвращает пару
        access/refresh токенов.
      parameters:
      - description: Данные для входа
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Пользователь авторизован, токены выданы
          schema:
            $ref: '#/definitions/internal_auth.LoginResponse'
        "400":
          description: Некорректный JSON
          schema:
            type: string
        "401":
          description: Неверный телефон или пароль
          schema:
            type: string
      summary: Вход по номеру телефона и паролю
      tags:
      - auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Удаляет refresh токен из БД, делая его невалидным. После этого
        все access токены с этим refresh станут неактуальны.
      parameters:
      - description: Refresh токен для удаления
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_auth.RefreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Выход выполнен
        "400":
          description: Некорректный JSON
          schema:
            type: string
      summary: Выйти из системы (logout)
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Принимает refresh токен, возвращает новую пару access/refresh токенов.
      parameters:
      - description: Refresh токен
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_auth.RefreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Новая пара токенов выдана
          schema:
            $ref: '#/definitions/internal_auth.RefreshResponse'
        "400":
          description: Некорректный JSON
          schema:
            type: string
        "401":
          description: Неверный или истёкший refresh токен
          schema:
            type: string
      summary: Обновить access/refresh токены
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Создает нового пользователя по данным (телефон, имя, email и т.д.)
      parameters:
      - description: Данные для регистрации
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_auth.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Пользователь успешно создан
        "400":
          description: Некорректный JSON/пароль/номер занят
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Регистрация нового пользователя
      tags:
      - auth
  /auth/request-registration-code:
    post:
      consumes:
      - application/json
      description: Отправляет код подтверждения на номер для регистрации
      parameters:
      - description: Номер телефона
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_auth.RequestPhoneVerificationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Код отправлен
        "400":
          description: Аккаунт с этим номером уже существует
          schema:
            type: string
        "500":
          description: Ошибка сервера
          schema:
            type: string
      summary: Запросить код для регистрации
      tags:
      - auth
  /auth/reset-password:
    post:
      consumes:
      - application/json
      description: Установка нового пароля по телефону после проверки кода
      parameters:
      - description: Телефон и новый пароль
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_auth.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Пароль успешно сброшен
        "400":
          description: Ошибка сброса пароля
          schema:
            type: string
      summary: Сброс пароля по телефону
      tags:
      - auth
  /auth/verify-phone:
    post:
      consumes:
      - application/json
      description: Проверка кода, отправленного на телефон (регистрация/восстановление)
      parameters:
      - description: Телефон и код
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_auth.VerifyPhoneRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Код успешно подтверждён
        "400":
          description: Неверный или истёкший код
          schema:
            type: string
      summary: Подтвердить номер телефона
      tags:
      - auth
  /users:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domofon_internal_db.User'
            type: array
        "500":
          description: Internal error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Получить список пользователей
      tags:
      - users
    post:
      consumes:
      - application/json
      parameters:
      - description: Новый пользователь
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/internal_user.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domofon_internal_db.User'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal error
          schema:
            type: string
      summary: Создать пользователя
      tags:
      - users
  /users/{id}:
    delete:
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Удалить пользователя
      tags:
      - users
    put:
      consumes:
      - application/json
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      - description: Данные пользователя
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domofon_internal_db.UpdateUserParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domofon_internal_db.User'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Обновить пользователя
      tags:
      - users
  /users/me:
    get:
      description: 'Требуется Access Token. Передайте access_token в заголовке Authorization
        в формате: ''Bearer {ваш токен}'''
      produces:
      - application/json
      responses:
        "200":
          description: Профиль пользователя
          schema:
            $ref: '#/definitions/domofon_internal_db.User'
        "401":
          description: Неавторизован
          schema:
            type: string
        "404":
          description: Пользователь не найден
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Получить профиль текущего пользователя (личный кабинет)
      tags:
      - users
  /users/me/avatar:
    delete:
      description: Требуется Access Token (Bearer)
      responses:
        "204":
          description: Аватар успешно удалён
          schema:
            type: string
        "401":
          description: Неавторизован
          schema:
            type: string
        "500":
          description: Внутренняя ошибка
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Удалить аватар пользователя
      tags:
      - users
    post:
      consumes:
      - multipart/form-data
      description: Требуется Access Token (Bearer). Отправьте файл аватара в поле
        'avatar' формы (формат jpg/png/webp).
      parameters:
      - description: Файл аватара (jpg/png/webp)
        in: formData
        name: avatar
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: avatar_url — URL нового аватара
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Некорректные данные
          schema:
            type: string
        "401":
          description: Неавторизован
          schema:
            type: string
        "500":
          description: Внутренняя ошибка
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Загрузить или обновить аватар пользователя
      tags:
      - users
  /users/me/username:
    post:
      consumes:
      - application/json
      description: 'Требуется access token. Username должен быть уникальным. Формат
        запроса: {"username": "новый_username"}'
      parameters:
      - description: Новый username
        in: body
        name: body
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Некорректные данные
          schema:
            type: string
        "401":
          description: Неавторизован
          schema:
            type: string
        "409":
          description: Username already exists
          schema:
            type: string
        "500":
          description: Внутренняя ошибка
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Сменить username текущего пользователя
      tags:
      - users
swagger: "2.0"
